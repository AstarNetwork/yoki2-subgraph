
version: '3'
services:
  graph-node:
    image: graphprotocol/graph-node:v0.30.0
    platform: linux/amd64  # Explicitly set platform
    ports:
      - '8000:8000'
      - '8001:8001'
      - '8020:8020'
      - '8030:8030'
      - '8040:8040'
    depends_on:
      - ipfs
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8030/graphql"]
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      postgres_host: postgres
      postgres_user: graph-node
      postgres_pass: let-me-in
      postgres_db: graph-node
      ipfs: "ipfs:5001"
      ethereum: "soneium:https://rpc.soneium.org"
      GRAPH_NODE_HOST: 0.0.0.0
      GRAPH_LOG: info
      ETHEREUM_POLLING_INTERVAL: 1000
      # Uncomment to enable IPFS file API for file data sources
      # GRAPH_IPFS_TIMEOUT: 3
      GRAPH_ALLOW_NON_DETERMINISTIC_IPFS: 'true'
      GRAPH_GRAPHQL_DISABLE_PLAYGROUND: 'true'

  ipfs:
    image: ipfs/kubo:v0.17.0
    platform: linux/amd64
    ports:
      - '5001:5001'
    volumes:
      - ./data/ipfs:/data/ipfs

  postgres:
    image: postgres:14
    ports:
      - '5432:5432'
    command:
      [
        "postgres",
        "-cshared_preload_libraries=pg_stat_statements"
      ]
    environment:
      POSTGRES_USER: graph-node
      POSTGRES_PASSWORD: let-me-in
      POSTGRES_DB: graph-node
      PGDATA: "/data/postgres"
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=C"

    volumes:
      - ./data/postgres:/data/postgres

volumes:
  ipfs_data: